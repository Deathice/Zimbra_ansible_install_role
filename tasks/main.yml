---
# tasks file for ITM_zimbra_install
- name: Download Zimbra package
  block:
    - name: version
      shell: rpm -qa '(oraclelinux|sl|redhat|centos)-release(|-server)'|cut -d"." -f3
      register: version

    - name: Create untar directory
      file:
        path: /tmp/zcs
        state: directory

    - name: Copy zimbra file
      copy: 
        src: "{{ zim_tar }}"
        dest: /tmp/zcs
      register: zim_file_status
      ignore_errors: true

    - name: Downloading zimbra file in background
      get_url:
        url: "{{ zim_url }}"
        dest: /tmp/zcs
      async: 3600
      poll: 0
      register: dw_file
      when: zim_file_status.failed

- name: Generating variables
  block:
    - name: randomham
      shell: date +%s|sha256sum|base64|head -c 10
      register: randomham

    - name: randomspam
      shell: date +%s|sha256sum|base64|head -c 10
      register: randomspam

    - name: randomvirus
      shell: date +%s|sha256sum|base64|head -c 10
      register: randomvirus

- name: Manipulating files, packages and services
  block:
    - name: Configuring hostname
      shell: hostnamectl set-hostname {{ srv_hostname }}

    - name: Configuring /etc/hosts
      lineinfile:
        path: /etc/hosts
        insertbefore: '^127.0.0.1'
        line: '{{ ansible_default_ipv4.address }} {{ ansible_fqdn }} {{ ansible_hostname }}'

    - name: Installing packages
      yum:
        name: "{{ item }}"
        state: latest
      with_items:
        - 'perl'
        - 'net-tools'
        - 'nmap-ncat'
        - 'dnsmasq'

    - name: System update
      yum:
        name: '*'
        state: latest

    - name: Moving dnsmasq to .original
      copy:
        remote_src: true
        src: /etc/dnsmasq.conf
        dest: /etc/dnsmasq.conf.original

    - name: Configure dnsmasq
      template:
        src: dnsmasq.conf.j2
        dest: /etc/dnsmasq.conf
        owner: root
        group: root
        mode: 644

    - name: Start and enable dnsmasq service
      service:
        name: dnsmasq
        state: started
        enabled: true

    - name: Copy config script zimbra file
      template:
        src: 'installZimbraScript.j2'
        dest: /tmp/zcs/installZimbraScript

    - name: Copy config script keystrokes file
      template:
        src: 'installZimbra-keystrokes.j2'
        dest: /tmp/zcs/installZimbra-keystrokes

- name: Installing Zimbra
  block:
    - name: Checking download status
      async_status: jid={{ dw_file.ansible_job_id }}
      register: dw_status
      until: dw_status.finished
      retries: 80
      when: zim_file_status.failed

    - name: unarchive zimbra file
      unarchive:
        src: /tmp/zcs/{{ zim_tar }}
        dest: /tmp/zcs
        remote_src: true
      when: dw_status.exist

    - name: Installing Zimbra Collaboration just the Software
      shell: ./install.sh -s < /tmp/zcs/installZimbra-keystrokes
      args:
        chdir: /tmp/zcs/{{ zim_unarchive }}

    - name: Installing Zimbra Collaboration injecting the configuration
      shell: /opt/zimbra/libexec/zmsetup.pl -c /tmp/zcs/installZimbraScript

    - name: Change to zimbra user and execute zmcontrol restart
      shell: su - zimbra -c 'zmcontrol restart'
  when: version.stdout == 'el7'
    
